program Project1;

{$APPTYPE CONSOLE}

{$R *.res}

uses
  System.SysUtils;

type
  TArray = array of Integer;

var
  ArrayOfSizes: array[1..6] of Integer = (100, 250, 500, 1000, 2000, 3000);
  ArrayOfTypes: array[1..3] of string = ('Random', 'ascending', 'descending');
  FType: Integer;
  FArray_1, FArray_2: TArray;
  Counter, TypesCounter: Integer;
  Comparisons: Integer;


//Swap - Процедура обмена двух элементов массива
procedure Swap(var AA, AB: Integer);
var
  Temp: Integer;

begin
  Temp := AA;
  AA := AB;
  AB := Temp;
end;

//Fill - Процедура заполнения элементов массива в зависимовти от AParam
procedure Fill(var AArray_1, AArray_2: TArray; AParam: Integer);
var
  i, k: Integer;

begin
  case AParam of

    //Заполнение рандомными числами
    1:
      for i := 0 to Length(AArray_1) do
      begin
        K := Random(100);
        AArray_1[i] := k;
        AArray_2[i] := k;
      end;

    //Заполнение по возрастанию
    2:
      for i := 0 to Length(AArray_1) do
      Begin
        k := i + 1;
        AArray_1[i] := k;
        AArray_2[i] := k;
      End;

    //Заполнение по убыванию
    3:
      for i := 0 to Length(AArray_1) do
      begin
        k := Length(AArray_1) - i;
        AArray_1[i] := k;
        AArray_2[i] := k;
      end;
  end;
end;

procedure FloatingBubble(var AArray: TArray; var AComparisons: Integer);
var
  i, k: Integer;
  N: Integer;
  IsSorted: Boolean;


begin
  IsSorted := False;
  N := Length(AArray);

  for i := 0 to N - 1 do
  begin
    If (AArray[i] > AArray[i + 1]) then
    begin
      Inc(AComparisons);
      Swap(AArray[i], AArray[i + 1]);
      k := i;
      IsSorted := True;
      while (K > 1) and (IsSorted) do
      begin
        if (AArray[k - 1] > AArray[k]) then
        begin
          Swap(AArray[k - 1], AArray[k]);
          Dec(K);
          Inc(AComparisons);
        end
        else IsSorted := False;
      end;
    end;
    Inc(AComparisons);
  end;
end;

procedure SimpleInserts(var AArray: TArray; var AComparisons: Integer);
var
  i, j: Integer;
  N: Integer;
  x: Integer;

begin
  N := Length(AArray);
  i := 1;
  while (i <= N) do
  begin
    x := AArray[i];
    j := i - 1;
    while (j >= 1) and (AArray[j] > x) do
    begin
      AArray[j + 1] := AArray[j];
      j := j - 1;
      Inc(AComparisons);
    end;
    Inc(AComparisons);
    AArray[j + 1] := x;
    Inc(i);
  end;
end;

begin
  TypesCounter := 1;
  while (TypesCounter <= 3) do
  Begin
    Counter := 1;
    while Counter <= 6 do
    begin
      SetLength(FArray_1, ArrayOfSizes[Counter]);
      SetLength(FArray_2, ArrayOfSizes[Counter]);

      Fill(FArray_1, FArray_2, TypesCounter);
      Comparisons := 0;
      FloatingBubble(FArray_1, Comparisons);
      Writeln('Floating Bubble.', ArrayOfTypes[TypesCounter], '; Size = ',
        ArrayOfSizes[Counter], #10, 'Comparisons = ', Comparisons, #10);

      Comparisons := 0;
      SimpleInserts(FArray_2, Comparisons);
      Writeln('Simple Inserts.', ArrayOfTypes[TypesCounter], '; Size = ',
        ArrayOfSizes[Counter], #10, 'Comparisons = ', Comparisons, #10);

      Inc(Counter);
    end;

    Inc(TypesCounter);
  End;

  Readln;
end.
